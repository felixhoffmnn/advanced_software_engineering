[tool.poetry]
name = "Advanced Software Engineering"
version = "0.1.0"
description = "A speech bot for your daily needs build during advanced software engineering at DHBW Stuttgart."
authors = [
  "Felix Hoffmann <felix.emmanuel.hoffmann@gmail.com>",
  "Nick Schroeder <nick.b.schroeder@outlook.de>",
  "Leopold Fuchs <kontakt@leopold-fuchs.de>",
  "Maxime Fritzsch <mfritzsch89@gmail.com>",
  "Stephan Auf der Landwehr <steadl@gmx.de>",
]
license = "MIT"
readme = "README.md"
packages = [{ include = "aswe" }]

[tool.poetry.dependencies]
python = "^3.10"
loguru = "^0.6.0"
pandas = "^1.5.0"
PyAudio = "^0.2.12"
requests = "^2.28.1"
vvspy = "^1.2.0"
currencyconverter = "^0.17.2"
googlemaps = "^4.6.0"
SpeechRecognition = "^3.8.1"
pyttsx3 = "^2.90"
python-dotenv = "^0.21.0"
poetry-dotenv-plugin = "^0.1.0"
fire = "^0.4.0"
pyjokes = "^0.6.0"
google-api-python-client = "^2.66.0"
google-auth-oauthlib = "^0.7.1"
pycountry = "^22.3.5"

[tool.poetry.group.dev.dependencies]
black = { extras = ["jupyter"], version = "^22.8.0" }
isort = "^5.10.1"
mypy = "^0.981"
pylint = "^2.15.3"
pytest = "^7.1.3"
pre-commit = "^2.20.0"
pytest-cov = { extras = ["toml"], version = "^4.0.0" }
jupyter = "^1.0.0"
types-requests = "^2.28.11.2"
pytest-mock = "^3.10.0"
poethepoet = "^0.16.5"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.4.0"
mkdocs-material = "^8.5.6"
mkdocstrings = { extras = ["python"], version = "^0.19.0" }
mkdocs-autorefs = "^0.4.1"
mkdocs-git-revision-date-localized-plugin = "^1.1.0"
pymdown-extensions = "^9.8"
mkdocs-mermaid2-plugin = "^0.6.0"

[tool.poe.tasks]
run = { cmd = "python ./aswe/core/agent.py main", help = "Runs agent" }
test = { cmd = "pytest", help = "Runs pytest" }
test-cov = { cmd = "pytest --cov=aswe --cov-report=term-missing --cov-fail-under=${THRESHOLD}", help = "Test entire project with coverage.", args = [
  { name = "THRESHOLD", help = "Minimal threshold test coverage should reach before failing. By default 80.", default = 80, required = false, positional = true, type = "integer" },
] }
pre-commit = { cmd = "pre-commit run --all-files", help = "Runs pre-commit hooks" }
docs-serve = { cmd = "mkdocs serve", help = "Serves mkdocs documentation" }
docs-build = { cmd = "mkdocs build", help = "Serves mkdocs documentation" }
lock = [
  { cmd = "poetry lock" },
  { cmd = "poetry export -f requirements.txt -o requirements.txt" },
  { cmd = "poetry export --only=dev -f requirements.txt -o requirements_dev.txt" },
  { cmd = "poetry export --only=docs -f requirements.txt -o docs/requirements_docs.txt" },
]

[tool.mypy]
mypy_path = 'aswe'
check_untyped_defs = true
disallow_any_generics = true
ignore_missing_imports = true
no_implicit_optional = true
show_error_codes = true
strict_equality = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
no_implicit_reexport = true
disallow_untyped_defs = true
warn_no_return = true
pretty = true

[tool.black]
line-length = 120
target-version = ['py310']

[tool.isort]
profile = "black"

[tool.pylint]
disable = "missing-module-docstring, broad-except"
max-line-length = 120

[tool.pytest]
testpaths = "tests"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
